name: insider-spearhead

on:
  workflow_dispatch:
    inputs:
      new_release:
        type: boolean
        description: Force new Release
      force_dispatch:
        type: boolean
        description: Force dispatch
      dont_update:
        type: boolean
        description: Don't update VSCode
      dont_dispatch:
        type: boolean
        description: Disable dispatch
  # schedule:
  #   - cron: "0 7 * * *"

jobs:
  build:
    runs-on: macos-14
    env:
      APP_NAME: Aide
      ASSETS_REPOSITORY: ${{ github.repository_owner }}/binaries-insiders
      VERSIONS_REPOSITORY: ${{ github.repository_owner }}/versions
      OS_NAME: osx
      VSCODE_ARCH: arm64
      VSCODE_LATEST: ${{ github.event.inputs.dont_update == 'true' && 'no' || 'yes' }}
      VSCODE_QUALITY: insider

    steps:
      - uses: actions/checkout@v4
        with:
          ref: insider

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "20.18"

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
        if: env.SHOULD_BUILD == 'yes'

      - name: Point gcloud SDK to Python
        shell: bash
        run: echo "CLOUDSDK_PYTHON=${{ steps.setup-python.outputs.python-path }}" >> $GITHUB_ENV

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_GAE_SA_KEY }}'

      - name: Configure Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      - name: Clone VSCode repo
        run: . get_repo.sh

      - name: Check existing Aide tags/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_RELEASE: ${{ github.event.inputs.new_release }}
          IS_SPEARHEAD: "yes"
        run: . check_tags.sh

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./build.sh
        if: env.SHOULD_BUILD == 'yes'

      # - name: Update <quality>.json
      #   run: ./update_qualityjson.sh
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.BINARIES_RELEASE_PAT }}
      #     GITHUB_USERNAME: ${{ github.repository_owner }}
      #   if: env.SHOULD_BUILD == 'yes' && github.event.inputs.dont_update != 'true'

      # - name: Prepare source
      #   run: ./prepare_src.sh
      #   if: env.SHOULD_BUILD == 'yes'

      # - name: Release source
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.BINARIES_RELEASE_PAT }}
      #     GITHUB_USERNAME: ${{ github.repository_owner }}
      #   run: ./release.sh
      #   if: env.SHOULD_BUILD == 'yes'

      - name: Dispatch builds
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: "insider"
        if: github.event.inputs.dont_dispatch != 'true' && (env.SHOULD_BUILD == 'yes' || github.event.inputs.force_dispatch == 'true')
